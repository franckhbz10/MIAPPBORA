-- Crear tablas separadas para el lexicón (diccionario)
-- Ejecutar esto en el SQL Editor de Supabase

-- Extensión pgvector (si no está habilitada)
CREATE EXTENSION IF NOT EXISTS vector;

-- Tabla principal de entradas del lexicón
CREATE TABLE IF NOT EXISTS lexicon_entries (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  bora_text TEXT NOT NULL,
  spanish_text TEXT NOT NULL,
  lemma TEXT,
  pos TEXT,
  pos_full TEXT,
  category TEXT,
  page INT,
  variants JSONB,
  synonyms JSONB,
  raw TEXT,
  source TEXT DEFAULT 'salida.json',
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  UNIQUE (bora_text, spanish_text)
);

-- Tabla de embeddings del lexicón
CREATE TABLE IF NOT EXISTS lexicon_embeddings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  entry_id BIGINT NOT NULL REFERENCES lexicon_entries(id) ON DELETE CASCADE,
  embedding VECTOR(384) NOT NULL,
  model TEXT DEFAULT 'sentence-transformers/all-MiniLM-L6-v2',
  metadata JSONB,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Índice HNSW para búsquedas por coseno
CREATE INDEX IF NOT EXISTS lexicon_embeddings_embedding_idx
ON lexicon_embeddings USING hnsw (embedding vector_cosine_ops);

-- Función RPC para búsqueda semántica en el lexicón
CREATE OR REPLACE FUNCTION match_lexicon (
  query_embedding VECTOR(384),
  match_threshold FLOAT DEFAULT 0.5,
  match_count INT DEFAULT 5,
  category_filter TEXT DEFAULT NULL
)
RETURNS TABLE (
  id BIGINT,
  entry_id BIGINT,
  bora_text TEXT,
  spanish_text TEXT,
  category TEXT,
  pos_full TEXT,
  similarity FLOAT
)
LANGUAGE plpgsql
AS $$
BEGIN
  RETURN QUERY
  SELECT
    le.id,
    le.entry_id,
    e.bora_text,
    e.spanish_text,
    COALESCE(e.category, e.pos_full) AS category,
    e.pos_full,
    1 - (le.embedding <=> query_embedding) AS similarity
  FROM lexicon_embeddings le
  JOIN lexicon_entries e ON le.entry_id = e.id
  WHERE (category_filter IS NULL OR e.pos_full = category_filter)
    AND (1 - (le.embedding <=> query_embedding)) > match_threshold
  ORDER BY le.embedding <=> query_embedding
  LIMIT match_count;
END;
$$;
